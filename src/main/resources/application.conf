akka {
  loggers          = [de.heikoseeberger.akkalog4j.Log4jLogger]
  logging-filter   = de.heikoseeberger.akkalog4j.Log4jLoggingFilter
  loglevel         = debug
  log-dead-letters = off
  stdout-loglevel  = info

  actor {
    provider = cluster
  }

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 30s // recommended for Akka Cluster Bootstrap
  }

  discovery {
    method = akka-dns
  }

  extensions = [akka.persistence.Persistence]

  management {
    cluster {
      bootstrap {
        contact-point {
          fallback-port = ${akka.management.http.port}
        }
      }
    }
  }

  persistence {
    journal {
      plugin              = cassandra-journal
      auto-start-journals = [cassandra-journal]
    }

    snapshot-store {
      plugin                     = cassandra-snapshot-store
      auto-start-snapshot-stores = [cassandra-snapshot-store]
    }
  }

  remote {
    artery {
      enabled   = on
      transport = tcp
    }
  }
}

akka.http.session {
  server-secret = "0123456789012345678901234567890123456789012345678901234567890123"
}

cassandra-journal {
  keyspace = chakka_iam
}

chakka-iam {
  accounts {
    username-regex = """\w+"""
    password-regex = """\w{4,}"""
  }

  authenticator {
    ask-timeout = 3 seconds
  }

  api {
    address             = 0.0.0.0
    port                = 80
    requests-done-after = 3 seconds
    ask-timeout         = 3 seconds
    events-max-idle     = 10 seconds
  }
}
